{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/userFind.ts","components/TodoForm/TodoForm.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","completed","title","TodoList","todos","map","username","getUserById","todoUserId","usersFromServer","find","TodoForm","addPost","useState","setTitle","userId","setUserId","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","action","method","onSubmit","event","preventDefault","htmlFor","type","placeholder","value","onChange","sanitizedTitle","target","replace","App","todosIncludesUser","todosFromServer","todoItems","setTodoItems","data","newTodo","Math","max","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e6481b7.chunk.js","sourcesContent":["import { User } from '../../types/user';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user?.email}`}\n    >\n      {user?.name}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(todoUserId: number) {\n  return usersFromServer.find(user => user.id === todoUserId) || null;\n}\n","import React, { useState } from 'react';\nimport { getUserById } from '../../services/userFind';\nimport { Todo } from '../../types/todo';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  addPost: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ addPost }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const sanitizedTitle = event.target.value\n      .replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, '');\n\n    setTitle(sanitizedTitle);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  function validate() {\n    if (!title) {\n      setHasTitleError(true);\n    }\n\n    if (!userId) {\n      setHasUserIdError(true);\n    }\n  }\n\n  const clear = () => {\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    validate();\n\n    if (!title || !userId) {\n      return;\n    }\n\n    addPost({\n      id: 0,\n      title,\n      completed: false,\n      userId: 0,\n      user: getUserById(+userId),\n    });\n\n    clear();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"title-input\">Title:</label>\n        <input\n          data-cy=\"titleInput\"\n          id=\"title-input\"\n          type=\"text\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\"> Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"user-select\">User:</label>\n        <select\n          data-cy=\"userSelect\"\n          id=\"user-select\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\">Choose a user</option>\n\n          {usersFromServer.map((user => (\n            <option\n              value={user.id}\n              key={user.id}\n            >\n              {user.name}\n            </option>\n          )))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\"> Please choose a user</span>\n        )}\n      </div>\n\n      <button\n        data-cy=\"submitButton\"\n        type=\"submit\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm';\nimport { getUserById } from './services/userFind';\nimport { Todo } from './types/todo';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const todosIncludesUser = todosFromServer.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n\n  const [todoItems, setTodoItems] = useState(todosIncludesUser);\n\n  function getMaxId(todos: Todo[]) {\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    return maxId + 1;\n  }\n\n  const addPost = ({ id, ...data }: Todo) => {\n    const newTodo = {\n      id: getMaxId(todoItems),\n      ...data,\n    };\n\n    setTodoItems(current => [...current, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <TodoForm addPost={addPost} />\n      <TodoList todos={todoItems} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}